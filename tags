!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/315c3351/
ARPProxy	ARPProxy.java	/^	public ARPProxy(MacAddress mac, IPv4Address addr){$/;"	m	class:ARPProxy
ARPProxy	ARPProxy.java	/^public class ARPProxy{$/;"	c
GatewayForwarding	GatewayForwarding.java	/^public class GatewayForwarding{$/;"	c
HostApplicationId	HostApplicationId.java	/^	public HostApplicationId(IPv4Address address,Integer port){$/;"	m	class:HostApplicationId
HostApplicationId	HostApplicationId.java	/^public class HostApplicationId{$/;"	c
HostMap	HostMap.java	/^	public HostMap(){$/;"	m	class:HostMap
HostMap	HostMap.java	/^public class HostMap{$/;"	c
NAT	NAT.java	/^public class NAT implements IFloodlightModule, IOFMessageListener{$/;"	c
TransportLayerPortPool	TransportLayerPortPool.java	/^	public TransportLayerPortPool(){$/;"	m	class:TransportLayerPortPool
TransportLayerPortPool	TransportLayerPortPool.java	/^public class TransportLayerPortPool{$/;"	c
addMapping	HostMap.java	/^	public void addMapping(Integer port,IPv4Address ip,Integer transportPort){$/;"	m	class:HostMap
addPortToPool	TransportLayerPortPool.java	/^	public void addPortToPool(Integer port){$/;"	m	class:TransportLayerPortPool
address	HostApplicationId.java	/^	private IPv4Address address;$/;"	f	class:HostApplicationId	file:
dpidMap	NAT.java	/^	private HashSet<DatapathId> dpidMap;$/;"	f	class:NAT	file:
equals	HostApplicationId.java	/^	public boolean equals(Object ob){$/;"	m	class:HostApplicationId
forwarding	NAT.java	/^	private GatewayForwarding forwarding;$/;"	f	class:NAT	file:
gatewayAttachPoint	NAT.java	/^	private NodePortTuple gatewayAttachPoint;$/;"	f	class:NAT	file:
gatewayMac	ARPProxy.java	/^	private MacAddress gatewayMac;$/;"	f	class:ARPProxy	file:
gatewayMac	NAT.java	/^	private static final MacAddress gatewayMac = MacAddress.of("");$/;"	f	class:NAT	file:
getGatewayIP	ARPProxy.java	/^	public IPv4Address getGatewayIP(){$/;"	m	class:ARPProxy
getGatewayMac	ARPProxy.java	/^	public MacAddress getGatewayMac(){$/;"	m	class:ARPProxy
getIP	HostApplicationId.java	/^	public IPv4Address getIP(){$/;"	m	class:HostApplicationId
getMappedIP	HostMap.java	/^	public IPv4Address getMappedIP(Integer port){$/;"	m	class:HostMap
getMappedPort	HostMap.java	/^	public Integer getMappedPort(Integer port){$/;"	m	class:HostMap
getModuleDependencies	NAT.java	/^	public Collection<Class<? extends IFloodlightService>> getModuleDependencies() {$/;"	m	class:NAT
getModuleServices	NAT.java	/^	public Collection<Class<? extends IFloodlightService>> getModuleServices() {$/;"	m	class:NAT
getName	NAT.java	/^	public String getName() {$/;"	m	class:NAT
getPort	HostApplicationId.java	/^	public Integer getPort(){$/;"	m	class:HostApplicationId
getPortFromPool	TransportLayerPortPool.java	/^	public Integer getPortFromPool() throws NoSuchElementException{$/;"	m	class:TransportLayerPortPool
getServiceImpls	NAT.java	/^	public Map<Class<? extends IFloodlightService>, IFloodlightService> getServiceImpls() {$/;"	m	class:NAT
globalIP	NAT.java	/^	private IPv4Address   globalIP;$/;"	f	class:NAT	file:
handlePacketIn	ARPProxy.java	/^	public Command handlePacketIn(IOFSwitch sw,ARP arp,OFPort inPort){$/;"	m	class:ARPProxy
hostMap	NAT.java	/^	private HostMap hostMap;$/;"	f	class:NAT	file:
init	NAT.java	/^	public void init(FloodlightModuleContext context) throws FloodlightModuleException {$/;"	m	class:NAT
isCallbackOrderingPostreq	NAT.java	/^	public boolean isCallbackOrderingPostreq(OFType type, String name) {$/;"	m	class:NAT
isCallbackOrderingPrereq	NAT.java	/^	public boolean isCallbackOrderingPrereq(OFType type, String name) {$/;"	m	class:NAT
isEmpty	TransportLayerPortPool.java	/^	public boolean isEmpty(){$/;"	m	class:TransportLayerPortPool
isInPool	TransportLayerPortPool.java	/^	public boolean isInPool(Integer port){$/;"	m	class:TransportLayerPortPool
map	HostMap.java	/^	private HashMap<Integer,HostApplicationId> map;$/;"	f	class:HostMap	file:
net.floodlightcontroller.sdn_nat	ARPProxy.java	/^package net.floodlightcontroller.sdn_nat;$/;"	p
net.floodlightcontroller.sdn_nat	GatewayForwarding.java	/^package net.floodlightcontroller.sdn_nat;$/;"	p
net.floodlightcontroller.sdn_nat	HostApplicationId.java	/^package net.floodlightcontroller.sdn_nat;$/;"	p
net.floodlightcontroller.sdn_nat	HostMap.java	/^package net.floodlightcontroller.sdn_nat;$/;"	p
net.floodlightcontroller.sdn_nat	NAT.java	/^package net.floodlightcontroller.sdn_nat;$/;"	p
net.floodlightcontroller.sdn_nat	TransportLayerPortPool.java	/^package net.floodlightcontroller.sdn_nat;$/;"	p
port	HostApplicationId.java	/^	private Integer port;$/;"	f	class:HostApplicationId	file:
portPool	NAT.java	/^	private TransportLayerPortPool portPool;$/;"	f	class:NAT	file:
privateGatewayIP	ARPProxy.java	/^	private IPv4Address privateGatewayIP;$/;"	f	class:ARPProxy	file:
proxy	NAT.java	/^	private ARPProxy proxy;$/;"	f	class:NAT	file:
receive	NAT.java	/^	public Command receive(IOFSwitch sw, OFMessage msg, FloodlightContext cntx) {$/;"	m	class:NAT
removeMapping	HostMap.java	/^	public void removeMapping(Integer port){$/;"	m	class:HostMap
sdn_nat	README.md	/^# sdn_nat$/;"	c
set	TransportLayerPortPool.java	/^	private TreeSet<Integer> set;$/;"	f	class:TransportLayerPortPool	file:
setIP	HostApplicationId.java	/^	public void setIP(IPv4Address addr){$/;"	m	class:HostApplicationId
setPort	HostApplicationId.java	/^	public void setPort(Integer port){$/;"	m	class:HostApplicationId
startUp	NAT.java	/^	public void startUp(FloodlightModuleContext context) throws FloodlightModuleException {$/;"	m	class:NAT
subnet	NAT.java	/^	private IPv4AddressWithMask subnet;$/;"	f	class:NAT	file:
updateMapping	HostMap.java	/^	public boolean updateMapping(Integer port,IPv4Address ip,Integer transportPort){$/;"	m	class:HostMap
